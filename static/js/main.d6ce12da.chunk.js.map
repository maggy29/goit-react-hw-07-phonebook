{"version":3,"sources":["Components/Form/Form.module.css","Components/Contact/Contact.module.css","Components/Filter/Filter.module.css","Components/Layout/Layout.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","Components/Form/Form.js","Components/Contact/Contact.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Layout/Layout.js","Components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","filterContacts","axios","defaults","baseURL","addContact","name","number","dispatch","contactsActions","post","then","data","catch","message","fetchContacts","get","removeContact","id","delete","Form","state","handlerInputChange","e","target","value","setState","handlerSubmit","preventDefault","contacts","props","nameAtList","some","contact","toLowerCase","numberAtList","toast","info","onAddContact","this","className","styles","container","onSubmit","label","type","onChange","Component","mapDispatchToProps","contactsOperations","connect","items","ownProps","item","find","onRemove","key","button","onClick","filter","normalizedFilter","includes","map","mapDispathToProps","onFilter","Layout","children","childrenContainer","App","onFetchContacts","isContactsLoading","length","loading","createReducer","action","payload","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6ce12da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__19-Fn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contact_container__GBKwi\",\"button\":\"Contact_button__2ewXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1IrcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Layout_header__2HWdW\",\"childrenContainer\":\"Layout_childrenContainer__2BzrY\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"contacts/addRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactError = createAction(\"contacts/addError\");\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchError\");\r\n\r\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactError = createAction(\"contacts/removeError\");\r\n\r\nconst filterContacts = createAction(\"contacts/filter\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  filterContacts,\r\n};\r\n","import contactsActions from \"./contactsActions\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3001/\";\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"contacts\", { name, number })\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch(({ message }) => dispatch(contactsActions.addContactError(message)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"contacts\")\r\n    .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\r\n    .catch(({ message }) =>\r\n      dispatch(contactsActions.fetchContactsError(message))\r\n    );\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(contactsActions.removeContactRequest());\r\n\r\n  axios\r\n    .delete(`contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\r\n    .catch(({ message }) =>\r\n      dispatch(contactsActions.removeContactError(message))\r\n    );\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  removeContact,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport styles from \"./Form.module.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handlerInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { contacts } = this.props;\r\n    const { name, number } = this.state;\r\n    const nameAtList = contacts.some(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n    const numberAtList = contacts.some((contact) => contact.number === number);\r\n\r\n    if (nameAtList) {\r\n      toast.info(`${name} is already in contacts!`);\r\n    } else if (numberAtList) {\r\n      toast.info(`${number} is already in contacts!`);\r\n    } else if (!name || !number) {\r\n      toast.info(\"Please, fill out the form!\");\r\n    } else {\r\n      this.props.onAddContact(this.state);\r\n    }\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n\r\n        <form className={styles.container} onSubmit={this.handlerSubmit}>\r\n          <label className={styles.label}>\r\n            Name <br />\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handlerInputChange}\r\n              name=\"name\"\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number <br />\r\n            <input\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={this.handlerInputChange}\r\n              name=\"number\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { contacts: state.contacts.items };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsOperations.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./Contact.module.css\";\r\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\r\n\r\nfunction Contact({ id, name, number, onRemove }) {\r\n  return (\r\n    <li className={styles.container} key={id}>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button className={styles.button} type=\"button\" onClick={onRemove}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.items.find((item) => item.id === ownProps.id);\r\n  return { ...item };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onRemove: () => dispatch(contactsOperations.removeContact(ownProps.id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Contact from \"../Contact/Contact\";\r\n\r\nfunction ContactList({ contacts }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id }) => (\r\n        <Contact key={id} id={id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const visibleContacts = items.filter(\r\n    (contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter) ||\r\n      contact.number.includes(filter)\r\n  );\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, onFilter }) {\r\n  return (\r\n    <label className={styles.container}>\r\n      Find contact by name <br />\r\n      <input\r\n        name=\"name\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onFilter(e.target.value)}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { value: state.contacts.filter };\r\n};\r\n\r\nconst mapDispathToProps = {\r\n  onFilter: contactsActions.filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(Filter);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Layout.module.css\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.childrenContainer}>{children}</div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsOperations from \"../redux/contacts/contactsOperations\";\r\nimport Form from \"./Form/Form\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Layout from \"./Layout/Layout\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { isContactsLoading, contacts } = this.props;\r\n    return (\r\n      <>\r\n        <Layout>\r\n          {isContactsLoading && <h1>LOADING...</h1>}\r\n          <h1>Phonebook</h1>\r\n          <Form />\r\n          {contacts.length > 1 && <Filter />}\r\n          {contacts.length > 0 && <h2>Contacts</h2>}\r\n          <ContactList />\r\n        </Layout>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n    isContactsLoading: state.contacts.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactsOperations.fetchContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport contactsActions from \"./contactsActions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst removeContact = (state, action) => {\r\n  return state.filter((item) => item.id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.addContactSuccess]: addContact,\r\n  [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactsActions.removeContactSuccess]: removeContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.filterContacts]: (state, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n  [contactsActions.fetchContactsRequest]: () => true,\r\n  [contactsActions.fetchContactsSuccess]: () => false,\r\n  [contactsActions.fetchContactsError]: () => false,\r\n  [contactsActions.removeContactRequest]: () => true,\r\n  [contactsActions.removeContactSuccess]: () => false,\r\n  [contactsActions.removeContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./Components/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}